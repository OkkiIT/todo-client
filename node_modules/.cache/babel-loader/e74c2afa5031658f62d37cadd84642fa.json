{"ast":null,"code":"import { ADD_SEARCH_TAG, CREATE_TAG, DELETE_TAG, EDIT_TAG, GET_TAGS, REMOVE_SEARCH_TAG, GET_SEARCH_TAG } from \"../actionTypes\";\nconst initialState = {\n  tags: [],\n  loading: false,\n  error: null,\n  searchTag: null,\n  isSearchTagActive: false\n};\n\nconst tagsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case GET_TAGS.START:\n      {\n        return { ...state,\n          loading: true\n        };\n      }\n\n    case GET_TAGS.SUCCESS:\n      {\n        return { ...state,\n          loading: false,\n          tags: payload\n        };\n      }\n\n    case GET_TAGS.FAILURE:\n      {\n        return { ...state,\n          loading: false,\n          error: payload\n        };\n      }\n\n    case CREATE_TAG.START:\n      {\n        return { ...state,\n          loading: true\n        };\n      }\n\n    case CREATE_TAG.SUCCESS:\n      {\n        return { ...state,\n          loading: false,\n          tags: payload\n        };\n      }\n\n    case CREATE_TAG.FAILURE:\n      {\n        return { ...state,\n          loading: false,\n          error: payload\n        };\n      }\n\n    case DELETE_TAG.START:\n      {\n        return { ...state,\n          loading: true\n        };\n      }\n\n    case DELETE_TAG.SUCCESS:\n      {\n        const tags = state.tags;\n        const indexOfDeletedTag = tags.findIndex(item => item.id === payload.id);\n        tags.splice(indexOfDeletedTag, 1);\n        return { ...state,\n          loading: false,\n          tags\n        };\n      }\n\n    case DELETE_TAG.FAILURE:\n      {\n        return { ...state,\n          loading: false,\n          error: payload\n        };\n      }\n\n    case EDIT_TAG.START:\n      {\n        return { ...state,\n          loading: true\n        };\n      }\n\n    case EDIT_TAG.SUCCESS:\n      {\n        const tags = state.tags;\n        const indexOfEditedTag = tags.findIndex(item => item.id === payload.id);\n        tags.splice(indexOfEditedTag, 1, {\n          id: payload.id,\n          text: payload.text\n        });\n        return { ...state,\n          loading: false,\n          tags\n        };\n      }\n\n    case EDIT_TAG.FAILURE:\n      {\n        return { ...state,\n          loading: false,\n          error: payload\n        };\n      }\n\n    case ADD_SEARCH_TAG:\n      {\n        return { ...state,\n          searchTag: payload,\n          isSearchTagActive: true\n        };\n      }\n\n    case REMOVE_SEARCH_TAG:\n      {\n        return { ...state,\n          searchTag: null,\n          isSearchTagActive: false\n        };\n      }\n\n    case GET_SEARCH_TAG:\n      {\n        return { ...state\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default tagsReducer;","map":{"version":3,"sources":["/Users/okki/Desktop/todoapp2/client/src/store/reducers/tags.js"],"names":["ADD_SEARCH_TAG","CREATE_TAG","DELETE_TAG","EDIT_TAG","GET_TAGS","REMOVE_SEARCH_TAG","GET_SEARCH_TAG","initialState","tags","loading","error","searchTag","isSearchTagActive","tagsReducer","state","type","payload","START","SUCCESS","FAILURE","indexOfDeletedTag","findIndex","item","id","splice","indexOfEditedTag","text"],"mappings":"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","sourcesContent":["import {\n  ADD_SEARCH_TAG,\n  CREATE_TAG,\n  DELETE_TAG,\n  EDIT_TAG,\n  GET_TAGS, REMOVE_SEARCH_TAG,\n    GET_SEARCH_TAG\n} from \"../actionTypes\";\n\nconst initialState = {\n  tags: [],\n  loading: false,\n  error: null,\n  searchTag:null,\n  isSearchTagActive:false,\n};\n\nconst tagsReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case GET_TAGS.START: {\n      return { ...state, loading: true };\n    }\n    case GET_TAGS.SUCCESS: {\n      return { ...state, loading: false, tags: payload };\n    }\n    case GET_TAGS.FAILURE: {\n      return { ...state, loading: false, error: payload };\n    }\n    case CREATE_TAG.START: {\n      return { ...state, loading: true };\n    }\n    case CREATE_TAG.SUCCESS: {\n      return { ...state, loading: false, tags: payload };\n    }\n    case CREATE_TAG.FAILURE: {\n      return { ...state, loading: false, error: payload };\n    }\n    case DELETE_TAG.START: {\n      return { ...state, loading: true };\n    }\n    case DELETE_TAG.SUCCESS: {\n      const tags = state.tags;\n\n      const indexOfDeletedTag = tags.findIndex(\n        (item) => item.id === payload.id\n      );\n      tags.splice(indexOfDeletedTag, 1);\n\n      return { ...state, loading: false, tags };\n    }\n    case DELETE_TAG.FAILURE: {\n      return { ...state, loading: false, error: payload };\n    }\n    case EDIT_TAG.START: {\n      return { ...state, loading: true };\n    }\n    case EDIT_TAG.SUCCESS: {\n      const tags = state.tags;\n\n      const indexOfEditedTag = tags.findIndex((item) => item.id === payload.id);\n      tags.splice(indexOfEditedTag, 1, {\n        id: payload.id,\n        text: payload.text,\n      });\n\n      return { ...state, loading: false, tags };\n    }\n    case EDIT_TAG.FAILURE: {\n      return { ...state, loading: false, error: payload };\n    }\n    case ADD_SEARCH_TAG:{\n      return {...state,searchTag: payload,isSearchTagActive: true}\n    }\n    case REMOVE_SEARCH_TAG:{\n      return {...state,searchTag: null,isSearchTagActive: false}\n    }\n    case GET_SEARCH_TAG:{\n      return {...state}\n    }\n    default:\n      return state;\n  }\n};\n\nexport default tagsReducer;\n"]},"metadata":{},"sourceType":"module"}