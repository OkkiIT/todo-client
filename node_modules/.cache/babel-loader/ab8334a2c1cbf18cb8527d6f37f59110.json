{"ast":null,"code":"import { takeLatest, all, call, put } from \"redux-saga/effects\";\nimport { CREATE_TODO, DELETE_TODO, EDIT_TODO, GET_TODOS } from \"../actionTypes\";\nimport { createTodo, deleteTodo, editTodo, getTodos } from \"../../services/todos\";\nimport { createTodoFailure, createTodoSuccess, deleteTodoFailure, deleteTodoSuccess, editTodoFailure, editTodoSuccess, getTodosFailure, getTodosSuccess } from \"../actions\";\n\nfunction* getTodosSaga() {\n  try {\n    const {\n      data\n    } = yield call(getTodos);\n    yield put(getTodosSuccess(data));\n  } catch (error) {\n    yield put(getTodosFailure(error));\n  }\n}\n\nfunction* createTodoSaga(_ref) {\n  let {\n    payload\n  } = _ref;\n\n  try {\n    const {\n      data\n    } = yield call(createTodo, payload);\n    yield put(createTodoSuccess(data));\n  } catch (error) {\n    yield put(createTodoFailure(error));\n  }\n}\n\nfunction* editTodoSaga(_ref2) {\n  let {\n    payload: {\n      id,\n      text,\n      onSuccess\n    }\n  } = _ref2;\n\n  try {\n    const {\n      data\n    } = yield call(editTodo, id, text);\n    yield put(editTodoSuccess(data));\n    yield call(onSuccess);\n  } catch (error) {\n    yield put(editTodoFailure(error));\n  }\n}\n\nfunction* deleteTodoSaga(_ref3) {\n  let {\n    payload: {\n      id\n    }\n  } = _ref3;\n\n  try {\n    const {\n      data\n    } = yield call(deleteTodo, id);\n    yield put(deleteTodoSuccess(data));\n  } catch (error) {\n    yield put(deleteTodoFailure(error));\n  }\n}\n\nexport default function* todosSaga() {\n  yield all([takeLatest(GET_TODOS.START, getTodosSaga), takeLatest(CREATE_TODO.START, createTodoSaga), takeLatest(EDIT_TODO.START, editTodoSaga), takeLatest(DELETE_TODO.START, deleteTodoSaga)]);\n}","map":{"version":3,"sources":["/Users/okki/Desktop/todoapp2/client/src/store/sagas/todos.js"],"names":["takeLatest","all","call","put","CREATE_TODO","DELETE_TODO","EDIT_TODO","GET_TODOS","createTodo","deleteTodo","editTodo","getTodos","createTodoFailure","createTodoSuccess","deleteTodoFailure","deleteTodoSuccess","editTodoFailure","editTodoSuccess","getTodosFailure","getTodosSuccess","getTodosSaga","data","error","createTodoSaga","payload","editTodoSaga","id","text","onSuccess","deleteTodoSaga","todosSaga","START"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,SAAnC,EAA8CC,SAA9C,QAA+D,gBAA/D;AACA,SACEC,UADF,EAEEC,UAFF,EAGEC,QAHF,EAIEC,QAJF,QAKO,sBALP;AAMA,SACEC,iBADF,EAEEC,iBAFF,EAGEC,iBAHF,EAIEC,iBAJF,EAKEC,eALF,EAMEC,eANF,EAOEC,eAPF,EAQEC,eARF,QASO,YATP;;AAWA,UAAUC,YAAV,GAAyB;AACvB,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMnB,IAAI,CAACS,QAAD,CAA3B;AACA,UAAMR,GAAG,CAACgB,eAAe,CAACE,IAAD,CAAhB,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAMnB,GAAG,CAACe,eAAe,CAACI,KAAD,CAAhB,CAAT;AACD;AACF;;AAED,UAAUC,cAAV,OAAsC;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;;AACpC,MAAI;AACF,UAAM;AAAEH,MAAAA;AAAF,QAAW,MAAMnB,IAAI,CAACM,UAAD,EAAagB,OAAb,CAA3B;AACA,UAAMrB,GAAG,CAACU,iBAAiB,CAACQ,IAAD,CAAlB,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAMnB,GAAG,CAACS,iBAAiB,CAACU,KAAD,CAAlB,CAAT;AACD;AACF;;AAED,UAAUG,YAAV,QAA6D;AAAA,MAAtC;AAAED,IAAAA,OAAO,EAAE;AAAEE,MAAAA,EAAF;AAAMC,MAAAA,IAAN;AAAYC,MAAAA;AAAZ;AAAX,GAAsC;;AAC3D,MAAI;AACF,UAAM;AAAEP,MAAAA;AAAF,QAAW,MAAMnB,IAAI,CAACQ,QAAD,EAAWgB,EAAX,EAAeC,IAAf,CAA3B;AACA,UAAMxB,GAAG,CAACc,eAAe,CAACI,IAAD,CAAhB,CAAT;AACA,UAAMnB,IAAI,CAAC0B,SAAD,CAAV;AACD,GAJD,CAIE,OAAON,KAAP,EAAc;AACd,UAAMnB,GAAG,CAACa,eAAe,CAACM,KAAD,CAAhB,CAAT;AACD;AACF;;AAED,UAAUO,cAAV,QAA8C;AAAA,MAArB;AAAEL,IAAAA,OAAO,EAAE;AAAEE,MAAAA;AAAF;AAAX,GAAqB;;AAC5C,MAAI;AACF,UAAM;AAAEL,MAAAA;AAAF,QAAW,MAAMnB,IAAI,CAACO,UAAD,EAAaiB,EAAb,CAA3B;AACA,UAAMvB,GAAG,CAACY,iBAAiB,CAACM,IAAD,CAAlB,CAAT;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAMnB,GAAG,CAACW,iBAAiB,CAACQ,KAAD,CAAlB,CAAT;AACD;AACF;;AAED,eAAe,UAAUQ,SAAV,GAAsB;AACnC,QAAM7B,GAAG,CAAC,CACRD,UAAU,CAACO,SAAS,CAACwB,KAAX,EAAkBX,YAAlB,CADF,EAERpB,UAAU,CAACI,WAAW,CAAC2B,KAAb,EAAoBR,cAApB,CAFF,EAGRvB,UAAU,CAACM,SAAS,CAACyB,KAAX,EAAkBN,YAAlB,CAHF,EAIRzB,UAAU,CAACK,WAAW,CAAC0B,KAAb,EAAoBF,cAApB,CAJF,CAAD,CAAT;AAMD","sourcesContent":["import { takeLatest, all, call, put } from \"redux-saga/effects\";\n\nimport { CREATE_TODO, DELETE_TODO, EDIT_TODO, GET_TODOS } from \"../actionTypes\";\nimport {\n  createTodo,\n  deleteTodo,\n  editTodo,\n  getTodos,\n} from \"../../services/todos\";\nimport {\n  createTodoFailure,\n  createTodoSuccess,\n  deleteTodoFailure,\n  deleteTodoSuccess,\n  editTodoFailure,\n  editTodoSuccess,\n  getTodosFailure,\n  getTodosSuccess,\n} from \"../actions\";\n\nfunction* getTodosSaga() {\n  try {\n    const { data } = yield call(getTodos);\n    yield put(getTodosSuccess(data));\n  } catch (error) {\n    yield put(getTodosFailure(error));\n  }\n}\n\nfunction* createTodoSaga({ payload }) {\n  try {\n    const { data } = yield call(createTodo, payload);\n    yield put(createTodoSuccess(data));\n  } catch (error) {\n    yield put(createTodoFailure(error));\n  }\n}\n\nfunction* editTodoSaga({ payload: { id, text, onSuccess } }) {\n  try {\n    const { data } = yield call(editTodo, id, text);\n    yield put(editTodoSuccess(data));\n    yield call(onSuccess);\n  } catch (error) {\n    yield put(editTodoFailure(error));\n  }\n}\n\nfunction* deleteTodoSaga({ payload: { id } }) {\n  try {\n    const { data } = yield call(deleteTodo, id);\n    yield put(deleteTodoSuccess(data));\n  } catch (error) {\n    yield put(deleteTodoFailure(error));\n  }\n}\n\nexport default function* todosSaga() {\n  yield all([\n    takeLatest(GET_TODOS.START, getTodosSaga),\n    takeLatest(CREATE_TODO.START, createTodoSaga),\n    takeLatest(EDIT_TODO.START, editTodoSaga),\n    takeLatest(DELETE_TODO.START, deleteTodoSaga),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}